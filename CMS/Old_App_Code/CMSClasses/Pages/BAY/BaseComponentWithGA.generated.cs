//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.BAY;

[assembly: RegisterDocumentType(BaseComponentWithGA.CLASS_NAME, typeof(BaseComponentWithGA))]

namespace CMS.DocumentEngine.Types.BAY
{
	/// <summary>
	/// Represents a content item of type BaseComponentWithGA.
	/// </summary>
	public partial class BaseComponentWithGA : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "BAY.BaseComponentWithGA";


		/// <summary>
		/// The instance of the class that provides extended API for working with BaseComponentWithGA fields.
		/// </summary>
		private readonly BaseComponentWithGAFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// KrungsriBaseComponentID.
		/// </summary>
		[DatabaseIDField]
		public int BaseComponentWithGAID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("BaseComponentWithGAID"), 0);
			}
			set
			{
				SetValue("BaseComponentWithGAID", value);
			}
		}


		/// <summary>
		/// Enable.
		/// </summary>
		[DatabaseField]
		public bool GAEnable
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("GAEnable"), false);
			}
			set
			{
				SetValue("GAEnable", value);
			}
		}


		/// <summary>
		/// Event code.
		/// </summary>
		[DatabaseField]
		public string GAEventCode
		{
			get
			{
				return ValidationHelper.GetString(GetValue("GAEventCode"), @"");
			}
			set
			{
				SetValue("GAEventCode", value);
			}
		}


		/// <summary>
		/// Category.
		/// </summary>
		[DatabaseField]
		public string GACategory
		{
			get
			{
				return ValidationHelper.GetString(GetValue("GACategory"), @"");
			}
			set
			{
				SetValue("GACategory", value);
			}
		}


		/// <summary>
		/// Action.
		/// </summary>
		[DatabaseField]
		public string GAAction
		{
			get
			{
				return ValidationHelper.GetString(GetValue("GAAction"), @"");
			}
			set
			{
				SetValue("GAAction", value);
			}
		}


		/// <summary>
		/// Label.
		/// </summary>
		[DatabaseField]
		public string GALabel
		{
			get
			{
				return ValidationHelper.GetString(GetValue("GALabel"), @"");
			}
			set
			{
				SetValue("GALabel", value);
			}
		}


		/// <summary>
		/// Element ID.
		/// </summary>
		[DatabaseField]
		public string ElementID
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ElementID"), @"");
			}
			set
			{
				SetValue("ElementID", value);
			}
		}


		/// <summary>
		/// Invisible.
		/// </summary>
		[DatabaseField]
		public bool Invisible
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("Invisible"), false);
			}
			set
			{
				SetValue("Invisible", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with BaseComponentWithGA fields.
		/// </summary>
		[RegisterProperty]
		public BaseComponentWithGAFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with BaseComponentWithGA fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class BaseComponentWithGAFields : AbstractHierarchicalObject<BaseComponentWithGAFields>
		{
			/// <summary>
			/// The content item of type BaseComponentWithGA that is a target of the extended API.
			/// </summary>
			private readonly BaseComponentWithGA mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="BaseComponentWithGAFields" /> class with the specified content item of type BaseComponentWithGA.
			/// </summary>
			/// <param name="instance">The content item of type BaseComponentWithGA that is a target of the extended API.</param>
			public BaseComponentWithGAFields(BaseComponentWithGA instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// KrungsriBaseComponentID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.BaseComponentWithGAID;
				}
				set
				{
					mInstance.BaseComponentWithGAID = value;
				}
			}


			/// <summary>
			/// Enable.
			/// </summary>
			public bool GAEnable
			{
				get
				{
					return mInstance.GAEnable;
				}
				set
				{
					mInstance.GAEnable = value;
				}
			}


			/// <summary>
			/// Event code.
			/// </summary>
			public string GAEventCode
			{
				get
				{
					return mInstance.GAEventCode;
				}
				set
				{
					mInstance.GAEventCode = value;
				}
			}


			/// <summary>
			/// Category.
			/// </summary>
			public string GACategory
			{
				get
				{
					return mInstance.GACategory;
				}
				set
				{
					mInstance.GACategory = value;
				}
			}


			/// <summary>
			/// Action.
			/// </summary>
			public string GAAction
			{
				get
				{
					return mInstance.GAAction;
				}
				set
				{
					mInstance.GAAction = value;
				}
			}


			/// <summary>
			/// Label.
			/// </summary>
			public string GALabel
			{
				get
				{
					return mInstance.GALabel;
				}
				set
				{
					mInstance.GALabel = value;
				}
			}


			/// <summary>
			/// Element ID.
			/// </summary>
			public string ElementID
			{
				get
				{
					return mInstance.ElementID;
				}
				set
				{
					mInstance.ElementID = value;
				}
			}


			/// <summary>
			/// Invisible.
			/// </summary>
			public bool Invisible
			{
				get
				{
					return mInstance.Invisible;
				}
				set
				{
					mInstance.Invisible = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="BaseComponentWithGA" /> class.
		/// </summary>
		public BaseComponentWithGA() : base(CLASS_NAME)
		{
			mFields = new BaseComponentWithGAFields(this);
		}

		#endregion
	}
}