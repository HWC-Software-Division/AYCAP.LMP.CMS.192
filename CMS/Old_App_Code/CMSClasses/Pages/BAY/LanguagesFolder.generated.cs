//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.BAY;

[assembly: RegisterDocumentType(LanguagesFolder.CLASS_NAME, typeof(LanguagesFolder))]

namespace CMS.DocumentEngine.Types.BAY
{
	/// <summary>
	/// Represents a content item of type LanguagesFolder.
	/// </summary>
	public partial class LanguagesFolder : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "BAY.LanguagesFolder";


		/// <summary>
		/// The instance of the class that provides extended API for working with LanguagesFolder fields.
		/// </summary>
		private readonly LanguagesFolderFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// NavigationFolderID.
		/// </summary>
		[DatabaseIDField]
		public int LanguagesFolderID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("LanguagesFolderID"), 0);
			}
			set
			{
				SetValue("LanguagesFolderID", value);
			}
		}


		/// <summary>
		/// Element ID.
		/// </summary>
		[DatabaseField]
		public string ElementID
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ElementID"), @"");
			}
			set
			{
				SetValue("ElementID", value);
			}
		}


		/// <summary>
		/// Invisible.
		/// </summary>
		[DatabaseField]
		public bool Invisible
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("Invisible"), false);
			}
			set
			{
				SetValue("Invisible", value);
			}
		}


		/// <summary>
		/// Folder name.
		/// </summary>
		[DatabaseField]
		public string FolderName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("FolderName"), @"");
			}
			set
			{
				SetValue("FolderName", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with LanguagesFolder fields.
		/// </summary>
		[RegisterProperty]
		public LanguagesFolderFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with LanguagesFolder fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class LanguagesFolderFields : AbstractHierarchicalObject<LanguagesFolderFields>
		{
			/// <summary>
			/// The content item of type LanguagesFolder that is a target of the extended API.
			/// </summary>
			private readonly LanguagesFolder mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="LanguagesFolderFields" /> class with the specified content item of type LanguagesFolder.
			/// </summary>
			/// <param name="instance">The content item of type LanguagesFolder that is a target of the extended API.</param>
			public LanguagesFolderFields(LanguagesFolder instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// NavigationFolderID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.LanguagesFolderID;
				}
				set
				{
					mInstance.LanguagesFolderID = value;
				}
			}


			/// <summary>
			/// Element ID.
			/// </summary>
			public string ElementID
			{
				get
				{
					return mInstance.ElementID;
				}
				set
				{
					mInstance.ElementID = value;
				}
			}


			/// <summary>
			/// Invisible.
			/// </summary>
			public bool Invisible
			{
				get
				{
					return mInstance.Invisible;
				}
				set
				{
					mInstance.Invisible = value;
				}
			}


			/// <summary>
			/// Folder name.
			/// </summary>
			public string FolderName
			{
				get
				{
					return mInstance.FolderName;
				}
				set
				{
					mInstance.FolderName = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="LanguagesFolder" /> class.
		/// </summary>
		public LanguagesFolder() : base(CLASS_NAME)
		{
			mFields = new LanguagesFolderFields(this);
		}

		#endregion
	}
}