//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.BAY;

[assembly: RegisterDocumentType(ProductDetail.CLASS_NAME, typeof(ProductDetail))]

namespace CMS.DocumentEngine.Types.BAY
{
	/// <summary>
	/// Represents a content item of type ProductDetail.
	/// </summary>
	public partial class ProductDetail : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "BAY.ProductDetail";


		/// <summary>
		/// The instance of the class that provides extended API for working with ProductDetail fields.
		/// </summary>
		private readonly ProductDetailFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// KrungsriPageID.
		/// </summary>
		[DatabaseIDField]
		public int ProductDetailID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("ProductDetailID"), 0);
			}
			set
			{
				SetValue("ProductDetailID", value);
			}
		}


		/// <summary>
		/// Event Category ดึง field นี้แทน H1<br>(ถ้าไม่มีจะดึง H1 เหมือนเดิม).
		/// </summary>
		[DatabaseField]
		public string EventCategory
		{
			get
			{
				return ValidationHelper.GetString(GetValue("EventCategory"), @"");
			}
			set
			{
				SetValue("EventCategory", value);
			}
		}


		/// <summary>
		/// Detail.
		/// </summary>
		[DatabaseField]
		public string Detail
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Detail"), @"");
			}
			set
			{
				SetValue("Detail", value);
			}
		}


		/// <summary>
		/// Show box content.
		/// </summary>
		[DatabaseField]
		public bool ShowContent
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("ShowContent"), true);
			}
			set
			{
				SetValue("ShowContent", value);
			}
		}


		/// <summary>
		/// Box content.
		/// </summary>
		[DatabaseField]
		public string BoxContent
		{
			get
			{
				return ValidationHelper.GetString(GetValue("BoxContent"), @"");
			}
			set
			{
				SetValue("BoxContent", value);
			}
		}


		/// <summary>
		/// Teaser image (370x270).
		/// </summary>
		[DatabaseField]
		public string TeaserImage
		{
			get
			{
				return ValidationHelper.GetString(GetValue("TeaserImage"), @"");
			}
			set
			{
				SetValue("TeaserImage", value);
			}
		}


		/// <summary>
		/// Teaser Image Mobile (370x370).
		/// </summary>
		[DatabaseField]
		public string TeaserImageMobile
		{
			get
			{
				return ValidationHelper.GetString(GetValue("TeaserImageMobile"), @"");
			}
			set
			{
				SetValue("TeaserImageMobile", value);
			}
		}


		/// <summary>
		/// Teaser image alt.
		/// </summary>
		[DatabaseField]
		public string TeaserImageAlt
		{
			get
			{
				return ValidationHelper.GetString(GetValue("TeaserImageAlt"), @"");
			}
			set
			{
				SetValue("TeaserImageAlt", value);
			}
		}


		/// <summary>
		/// Reference code.
		/// </summary>
		[DatabaseField]
		public string PageReferenceCode
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PageReferenceCode"), @"");
			}
			set
			{
				SetValue("PageReferenceCode", value);
			}
		}


		/// <summary>
		/// Product code/name.
		/// </summary>
		[DatabaseField]
		public string PageProductCode
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PageProductCode"), @"");
			}
			set
			{
				SetValue("PageProductCode", value);
			}
		}


		/// <summary>
		/// Http status code.
		/// </summary>
		[DatabaseField]
		public int HttpStatusCode
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("HttpStatusCode"), 0);
			}
			set
			{
				SetValue("HttpStatusCode", value);
			}
		}


		/// <summary>
		/// Head - Stylesheet.
		/// </summary>
		[DatabaseField]
		public string HeadStyleSheet
		{
			get
			{
				return ValidationHelper.GetString(GetValue("HeadStyleSheet"), @"");
			}
			set
			{
				SetValue("HeadStyleSheet", value);
			}
		}


		/// <summary>
		/// Head - Script.
		/// </summary>
		[DatabaseField]
		public string HeadScript
		{
			get
			{
				return ValidationHelper.GetString(GetValue("HeadScript"), @"");
			}
			set
			{
				SetValue("HeadScript", value);
			}
		}


		/// <summary>
		/// Enable share.
		/// </summary>
		[DatabaseField]
		public bool HasShare
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("HasShare"), true);
			}
			set
			{
				SetValue("HasShare", value);
			}
		}


		/// <summary>
		/// Has breadcrumb.
		/// </summary>
		[DatabaseField]
		public bool HasBreadCrumb
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("HasBreadCrumb"), true);
			}
			set
			{
				SetValue("HasBreadCrumb", value);
			}
		}


		/// <summary>
		/// Breadcrumb_Theme.
		/// </summary>
		[DatabaseField]
		public string Breadcrumb_Theme
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Breadcrumb_Theme"), @"");
			}
			set
			{
				SetValue("Breadcrumb_Theme", value);
			}
		}


		/// <summary>
		/// If empty, will default to the Properties -> Metadata -> Page title, followed by the Document Name.
		/// </summary>
		[DatabaseField]
		public string Metadata_Title
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Metadata_Title"), @"");
			}
			set
			{
				SetValue("Metadata_Title", value);
			}
		}


		/// <summary>
		/// If empty, will default to the Properties -> Metadata -> Page description.
		/// </summary>
		[DatabaseField]
		public string Metadata_Description
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Metadata_Description"), @"");
			}
			set
			{
				SetValue("Metadata_Description", value);
			}
		}


		/// <summary>
		/// If empty, will default to the Properties -> Metadata -> Page keywords.
		/// </summary>
		[DatabaseField]
		public string Metadata_Keywords
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Metadata_Keywords"), @"");
			}
			set
			{
				SetValue("Metadata_Keywords", value);
			}
		}


		/// <summary>
		/// Custom layout name.
		/// </summary>
		[DatabaseField]
		public string CustomLayoutName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CustomLayoutName"), @"");
			}
			set
			{
				SetValue("CustomLayoutName", value);
			}
		}


		/// <summary>
		/// Custom master page name.
		/// </summary>
		[DatabaseField]
		public string CustomMasterPageName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CustomMasterPageName"), @"");
			}
			set
			{
				SetValue("CustomMasterPageName", value);
			}
		}


		/// <summary>
		/// Custom header script.
		/// </summary>
		[DatabaseField]
		public string CustomHeaderScript
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CustomHeaderScript"), @"");
			}
			set
			{
				SetValue("CustomHeaderScript", value);
			}
		}


		/// <summary>
		/// Redirection Type.
		/// </summary>
		[DatabaseField]
		public string PageRedirectionType
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PageRedirectionType"), @"");
			}
			set
			{
				SetValue("PageRedirectionType", value);
			}
		}


		/// <summary>
		/// Internal page URL.
		/// </summary>
		[DatabaseField]
		public Guid PageInternalRedirectNodeGuid
		{
			get
			{
				return ValidationHelper.GetGuid(GetValue("PageInternalRedirectNodeGuid"), Guid.Empty);
			}
			set
			{
				SetValue("PageInternalRedirectNodeGuid", value);
			}
		}


		/// <summary>
		/// External page URL.
		/// </summary>
		[DatabaseField]
		public string PageExternalRedirectURL
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PageExternalRedirectURL"), @"");
			}
			set
			{
				SetValue("PageExternalRedirectURL", value);
			}
		}


		/// <summary>
		/// First child page type.
		/// </summary>
		[DatabaseField]
		public string PageFirstChildClassName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PageFirstChildClassName"), @"");
			}
			set
			{
				SetValue("PageFirstChildClassName", value);
			}
		}


		/// <summary>
		/// Use permanent (301) redirects?.
		/// </summary>
		[DatabaseField]
		public bool PageUsePermanentRedirects
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("PageUsePermanentRedirects"), false);
			}
			set
			{
				SetValue("PageUsePermanentRedirects", value);
			}
		}


		/// <summary>
		/// Canonical tags are bits of HTML that tell Google and other search engines which page is the canonical version.
		/// </summary>
		[DatabaseField]
		public string SEO_CanonicalTag
		{
			get
			{
				return ValidationHelper.GetString(GetValue("SEO_CanonicalTag"), @"");
			}
			set
			{
				SetValue("SEO_CanonicalTag", value);
			}
		}


		/// <summary>
		/// A Robots meta tag, also known as robots tags, is a piece of HTML code that's placed in the <head></head> section of a web page and is used to control how search engines crawl and index the URL.
		/// </summary>
		[DatabaseField]
		public string SEO_Robots
		{
			get
			{
				return ValidationHelper.GetString(GetValue("SEO_Robots"), @"");
			}
			set
			{
				SetValue("SEO_Robots", value);
			}
		}


		/// <summary>
		/// Do not show the page on the SERPs after a specified date/time.
		/// </summary>
		[DatabaseField]
		public string SEO_RobotsUnavailableAfter
		{
			get
			{
				return ValidationHelper.GetString(GetValue("SEO_RobotsUnavailableAfter"), @"");
			}
			set
			{
				SetValue("SEO_RobotsUnavailableAfter", value);
			}
		}


		/// <summary>
		/// Disallow in robots.txt?.
		/// </summary>
		[DatabaseField]
		public bool SEO_DisallowInRobots
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("SEO_DisallowInRobots"), false);
			}
			set
			{
				SetValue("SEO_DisallowInRobots", value);
			}
		}


		/// <summary>
		/// The title of your object as it should appear within the graph, e.g., "The Rock".
		/// </summary>
		[DatabaseField]
		public string OG_Title
		{
			get
			{
				return ValidationHelper.GetString(GetValue("OG_Title"), @"");
			}
			set
			{
				SetValue("OG_Title", value);
			}
		}


		/// <summary>
		/// The og:url property describes the canonical version of the URL, meaning: the version without parameters.
		/// </summary>
		[DatabaseField]
		public string OG_URL
		{
			get
			{
				return ValidationHelper.GetString(GetValue("OG_URL"), @"");
			}
			set
			{
				SetValue("OG_URL", value);
			}
		}


		/// <summary>
		/// An image URL which should represent your object within the graph. The maximum supported file size is 8 MB per image.
		/// </summary>
		[DatabaseField]
		public string OG_Image
		{
			get
			{
				return ValidationHelper.GetString(GetValue("OG_Image"), @"");
			}
			set
			{
				SetValue("OG_Image", value);
			}
		}


		/// <summary>
		/// OG Alt.
		/// </summary>
		[DatabaseField]
		public string OG_Alt
		{
			get
			{
				return ValidationHelper.GetString(GetValue("OG_Alt"), @"");
			}
			set
			{
				SetValue("OG_Alt", value);
			}
		}


		/// <summary>
		/// Use og:image:width and og:image:height to enable Facebook, etc. to load the image properly right after it's first shared.
		/// </summary>
		[DatabaseField]
		public int OG_ImageWidth
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("OG_ImageWidth"), 1200);
			}
			set
			{
				SetValue("OG_ImageWidth", value);
			}
		}


		/// <summary>
		/// Use og:image:width and og:image:height to enable Facebook, etc. to load the image properly right after it's first shared.
		/// </summary>
		[DatabaseField]
		public int OG_ImageHeight
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("OG_ImageHeight"), 630);
			}
			set
			{
				SetValue("OG_ImageHeight", value);
			}
		}


		/// <summary>
		/// The og:locale property describes the locale that the page is targeting. In this case it's the default value, en_US. You could say that og:locale is similar to the hreflang attribute in SEO in its intended use—targeting an audience.
		/// </summary>
		[DatabaseField]
		public string OG_Locale
		{
			get
			{
				return ValidationHelper.GetString(GetValue("OG_Locale"), @"");
			}
			set
			{
				SetValue("OG_Locale", value);
			}
		}


		/// <summary>
		/// The type of your object, e.g., "video.movie". Depending on the type you specify, other properties may also be required.
		/// </summary>
		[DatabaseField]
		public string OG_Type
		{
			get
			{
				return ValidationHelper.GetString(GetValue("OG_Type"), @"");
			}
			set
			{
				SetValue("OG_Type", value);
			}
		}


		/// <summary>
		/// The og:description stands for the Open Graph description. It's a short description what the page is about, similar to the meta description.
		/// </summary>
		[DatabaseField]
		public string OG_Description
		{
			get
			{
				return ValidationHelper.GetString(GetValue("OG_Description"), @"");
			}
			set
			{
				SetValue("OG_Description", value);
			}
		}


		/// <summary>
		/// Schema Markup .
		/// </summary>
		[DatabaseField]
		public string OG_SchemaMarkup
		{
			get
			{
				return ValidationHelper.GetString(GetValue("OG_SchemaMarkup"), @"");
			}
			set
			{
				SetValue("OG_SchemaMarkup", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with ProductDetail fields.
		/// </summary>
		[RegisterProperty]
		public ProductDetailFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with ProductDetail fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class ProductDetailFields : AbstractHierarchicalObject<ProductDetailFields>
		{
			/// <summary>
			/// The content item of type ProductDetail that is a target of the extended API.
			/// </summary>
			private readonly ProductDetail mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="ProductDetailFields" /> class with the specified content item of type ProductDetail.
			/// </summary>
			/// <param name="instance">The content item of type ProductDetail that is a target of the extended API.</param>
			public ProductDetailFields(ProductDetail instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// KrungsriPageID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.ProductDetailID;
				}
				set
				{
					mInstance.ProductDetailID = value;
				}
			}


			/// <summary>
			/// Event Category ดึง field นี้แทน H1<br>(ถ้าไม่มีจะดึง H1 เหมือนเดิม).
			/// </summary>
			public string EventCategory
			{
				get
				{
					return mInstance.EventCategory;
				}
				set
				{
					mInstance.EventCategory = value;
				}
			}


			/// <summary>
			/// Detail.
			/// </summary>
			public string Detail
			{
				get
				{
					return mInstance.Detail;
				}
				set
				{
					mInstance.Detail = value;
				}
			}


			/// <summary>
			/// Show box content.
			/// </summary>
			public bool ShowContent
			{
				get
				{
					return mInstance.ShowContent;
				}
				set
				{
					mInstance.ShowContent = value;
				}
			}


			/// <summary>
			/// Box content.
			/// </summary>
			public string BoxContent
			{
				get
				{
					return mInstance.BoxContent;
				}
				set
				{
					mInstance.BoxContent = value;
				}
			}


			/// <summary>
			/// Teaser image (370x270).
			/// </summary>
			public string TeaserImage
			{
				get
				{
					return mInstance.TeaserImage;
				}
				set
				{
					mInstance.TeaserImage = value;
				}
			}


			/// <summary>
			/// Teaser Image Mobile (370x370).
			/// </summary>
			public string TeaserImageMobile
			{
				get
				{
					return mInstance.TeaserImageMobile;
				}
				set
				{
					mInstance.TeaserImageMobile = value;
				}
			}


			/// <summary>
			/// Teaser image alt.
			/// </summary>
			public string TeaserImageAlt
			{
				get
				{
					return mInstance.TeaserImageAlt;
				}
				set
				{
					mInstance.TeaserImageAlt = value;
				}
			}


			/// <summary>
			/// Reference code.
			/// </summary>
			public string PageReferenceCode
			{
				get
				{
					return mInstance.PageReferenceCode;
				}
				set
				{
					mInstance.PageReferenceCode = value;
				}
			}


			/// <summary>
			/// Product code/name.
			/// </summary>
			public string PageProductCode
			{
				get
				{
					return mInstance.PageProductCode;
				}
				set
				{
					mInstance.PageProductCode = value;
				}
			}


			/// <summary>
			/// Http status code.
			/// </summary>
			public int HttpStatusCode
			{
				get
				{
					return mInstance.HttpStatusCode;
				}
				set
				{
					mInstance.HttpStatusCode = value;
				}
			}


			/// <summary>
			/// Head - Stylesheet.
			/// </summary>
			public string HeadStyleSheet
			{
				get
				{
					return mInstance.HeadStyleSheet;
				}
				set
				{
					mInstance.HeadStyleSheet = value;
				}
			}


			/// <summary>
			/// Head - Script.
			/// </summary>
			public string HeadScript
			{
				get
				{
					return mInstance.HeadScript;
				}
				set
				{
					mInstance.HeadScript = value;
				}
			}


			/// <summary>
			/// Enable share.
			/// </summary>
			public bool HasShare
			{
				get
				{
					return mInstance.HasShare;
				}
				set
				{
					mInstance.HasShare = value;
				}
			}


			/// <summary>
			/// Has breadcrumb.
			/// </summary>
			public bool HasBreadCrumb
			{
				get
				{
					return mInstance.HasBreadCrumb;
				}
				set
				{
					mInstance.HasBreadCrumb = value;
				}
			}


			/// <summary>
			/// Breadcrumb_Theme.
			/// </summary>
			public string Breadcrumb_Theme
			{
				get
				{
					return mInstance.Breadcrumb_Theme;
				}
				set
				{
					mInstance.Breadcrumb_Theme = value;
				}
			}


			/// <summary>
			/// If empty, will default to the Properties -> Metadata -> Page title, followed by the Document Name.
			/// </summary>
			public string Metadata_Title
			{
				get
				{
					return mInstance.Metadata_Title;
				}
				set
				{
					mInstance.Metadata_Title = value;
				}
			}


			/// <summary>
			/// If empty, will default to the Properties -> Metadata -> Page description.
			/// </summary>
			public string Metadata_Description
			{
				get
				{
					return mInstance.Metadata_Description;
				}
				set
				{
					mInstance.Metadata_Description = value;
				}
			}


			/// <summary>
			/// If empty, will default to the Properties -> Metadata -> Page keywords.
			/// </summary>
			public string Metadata_Keywords
			{
				get
				{
					return mInstance.Metadata_Keywords;
				}
				set
				{
					mInstance.Metadata_Keywords = value;
				}
			}


			/// <summary>
			/// Custom layout name.
			/// </summary>
			public string CustomLayoutName
			{
				get
				{
					return mInstance.CustomLayoutName;
				}
				set
				{
					mInstance.CustomLayoutName = value;
				}
			}


			/// <summary>
			/// Custom master page name.
			/// </summary>
			public string CustomMasterPageName
			{
				get
				{
					return mInstance.CustomMasterPageName;
				}
				set
				{
					mInstance.CustomMasterPageName = value;
				}
			}


			/// <summary>
			/// Custom header script.
			/// </summary>
			public string CustomHeaderScript
			{
				get
				{
					return mInstance.CustomHeaderScript;
				}
				set
				{
					mInstance.CustomHeaderScript = value;
				}
			}


			/// <summary>
			/// Redirection Type.
			/// </summary>
			public string PageRedirectionType
			{
				get
				{
					return mInstance.PageRedirectionType;
				}
				set
				{
					mInstance.PageRedirectionType = value;
				}
			}


			/// <summary>
			/// Internal page URL.
			/// </summary>
			public Guid PageInternalRedirectNodeGuid
			{
				get
				{
					return mInstance.PageInternalRedirectNodeGuid;
				}
				set
				{
					mInstance.PageInternalRedirectNodeGuid = value;
				}
			}


			/// <summary>
			/// External page URL.
			/// </summary>
			public string PageExternalRedirectURL
			{
				get
				{
					return mInstance.PageExternalRedirectURL;
				}
				set
				{
					mInstance.PageExternalRedirectURL = value;
				}
			}


			/// <summary>
			/// First child page type.
			/// </summary>
			public string PageFirstChildClassName
			{
				get
				{
					return mInstance.PageFirstChildClassName;
				}
				set
				{
					mInstance.PageFirstChildClassName = value;
				}
			}


			/// <summary>
			/// Use permanent (301) redirects?.
			/// </summary>
			public bool PageUsePermanentRedirects
			{
				get
				{
					return mInstance.PageUsePermanentRedirects;
				}
				set
				{
					mInstance.PageUsePermanentRedirects = value;
				}
			}


			/// <summary>
			/// Canonical tags are bits of HTML that tell Google and other search engines which page is the canonical version.
			/// </summary>
			public string SEO_CanonicalTag
			{
				get
				{
					return mInstance.SEO_CanonicalTag;
				}
				set
				{
					mInstance.SEO_CanonicalTag = value;
				}
			}


			/// <summary>
			/// A Robots meta tag, also known as robots tags, is a piece of HTML code that's placed in the <head></head> section of a web page and is used to control how search engines crawl and index the URL.
			/// </summary>
			public string SEO_Robots
			{
				get
				{
					return mInstance.SEO_Robots;
				}
				set
				{
					mInstance.SEO_Robots = value;
				}
			}


			/// <summary>
			/// Do not show the page on the SERPs after a specified date/time.
			/// </summary>
			public string SEO_RobotsUnavailableAfter
			{
				get
				{
					return mInstance.SEO_RobotsUnavailableAfter;
				}
				set
				{
					mInstance.SEO_RobotsUnavailableAfter = value;
				}
			}


			/// <summary>
			/// Disallow in robots.txt?.
			/// </summary>
			public bool SEO_DisallowInRobots
			{
				get
				{
					return mInstance.SEO_DisallowInRobots;
				}
				set
				{
					mInstance.SEO_DisallowInRobots = value;
				}
			}


			/// <summary>
			/// The title of your object as it should appear within the graph, e.g., "The Rock".
			/// </summary>
			public string OG_Title
			{
				get
				{
					return mInstance.OG_Title;
				}
				set
				{
					mInstance.OG_Title = value;
				}
			}


			/// <summary>
			/// The og:url property describes the canonical version of the URL, meaning: the version without parameters.
			/// </summary>
			public string OG_URL
			{
				get
				{
					return mInstance.OG_URL;
				}
				set
				{
					mInstance.OG_URL = value;
				}
			}


			/// <summary>
			/// An image URL which should represent your object within the graph. The maximum supported file size is 8 MB per image.
			/// </summary>
			public string OG_Image
			{
				get
				{
					return mInstance.OG_Image;
				}
				set
				{
					mInstance.OG_Image = value;
				}
			}


			/// <summary>
			/// OG Alt.
			/// </summary>
			public string OG_Alt
			{
				get
				{
					return mInstance.OG_Alt;
				}
				set
				{
					mInstance.OG_Alt = value;
				}
			}


			/// <summary>
			/// Use og:image:width and og:image:height to enable Facebook, etc. to load the image properly right after it's first shared.
			/// </summary>
			public int OG_ImageWidth
			{
				get
				{
					return mInstance.OG_ImageWidth;
				}
				set
				{
					mInstance.OG_ImageWidth = value;
				}
			}


			/// <summary>
			/// Use og:image:width and og:image:height to enable Facebook, etc. to load the image properly right after it's first shared.
			/// </summary>
			public int OG_ImageHeight
			{
				get
				{
					return mInstance.OG_ImageHeight;
				}
				set
				{
					mInstance.OG_ImageHeight = value;
				}
			}


			/// <summary>
			/// The og:locale property describes the locale that the page is targeting. In this case it's the default value, en_US. You could say that og:locale is similar to the hreflang attribute in SEO in its intended use—targeting an audience.
			/// </summary>
			public string OG_Locale
			{
				get
				{
					return mInstance.OG_Locale;
				}
				set
				{
					mInstance.OG_Locale = value;
				}
			}


			/// <summary>
			/// The type of your object, e.g., "video.movie". Depending on the type you specify, other properties may also be required.
			/// </summary>
			public string OG_Type
			{
				get
				{
					return mInstance.OG_Type;
				}
				set
				{
					mInstance.OG_Type = value;
				}
			}


			/// <summary>
			/// The og:description stands for the Open Graph description. It's a short description what the page is about, similar to the meta description.
			/// </summary>
			public string OG_Description
			{
				get
				{
					return mInstance.OG_Description;
				}
				set
				{
					mInstance.OG_Description = value;
				}
			}


			/// <summary>
			/// Schema Markup .
			/// </summary>
			public string OG_SchemaMarkup
			{
				get
				{
					return mInstance.OG_SchemaMarkup;
				}
				set
				{
					mInstance.OG_SchemaMarkup = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="ProductDetail" /> class.
		/// </summary>
		public ProductDetail() : base(CLASS_NAME)
		{
			mFields = new ProductDetailFields(this);
		}

		#endregion
	}
}