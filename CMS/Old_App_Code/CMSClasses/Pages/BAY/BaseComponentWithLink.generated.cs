//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.BAY;

[assembly: RegisterDocumentType(BaseComponentWithLink.CLASS_NAME, typeof(BaseComponentWithLink))]

namespace CMS.DocumentEngine.Types.BAY
{
	/// <summary>
	/// Represents a content item of type BaseComponentWithLink.
	/// </summary>
	public partial class BaseComponentWithLink : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "BAY.BaseComponentWithLink";


		/// <summary>
		/// The instance of the class that provides extended API for working with BaseComponentWithLink fields.
		/// </summary>
		private readonly BaseComponentWithLinkFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// KrungsriBaseComponentID.
		/// </summary>
		[DatabaseIDField]
		public int BaseComponentWithLinkID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("BaseComponentWithLinkID"), 0);
			}
			set
			{
				SetValue("BaseComponentWithLinkID", value);
			}
		}


		/// <summary>
		/// Link type.
		/// </summary>
		[DatabaseField]
		public int LinkType
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("LinkType"), 2);
			}
			set
			{
				SetValue("LinkType", value);
			}
		}


		/// <summary>
		/// Link page.
		/// </summary>
		[DatabaseField]
		public Guid LinkPageNodeGuid
		{
			get
			{
				return ValidationHelper.GetGuid(GetValue("LinkPageNodeGuid"), Guid.Empty);
			}
			set
			{
				SetValue("LinkPageNodeGuid", value);
			}
		}


		/// <summary>
		/// Link URL.
		/// </summary>
		[DatabaseField]
		public string LinkUrl
		{
			get
			{
				return ValidationHelper.GetString(GetValue("LinkUrl"), @"");
			}
			set
			{
				SetValue("LinkUrl", value);
			}
		}


		/// <summary>
		/// Link target.
		/// </summary>
		[DatabaseField]
		public string LinkTarget
		{
			get
			{
				return ValidationHelper.GetString(GetValue("LinkTarget"), @"");
			}
			set
			{
				SetValue("LinkTarget", value);
			}
		}


		/// <summary>
		/// Link alt.
		/// </summary>
		[DatabaseField]
		public string LinkAlt
		{
			get
			{
				return ValidationHelper.GetString(GetValue("LinkAlt"), @"");
			}
			set
			{
				SetValue("LinkAlt", value);
			}
		}


		/// <summary>
		/// Link CSS.
		/// </summary>
		[DatabaseField]
		public string LinkCss
		{
			get
			{
				return ValidationHelper.GetString(GetValue("LinkCss"), @"");
			}
			set
			{
				SetValue("LinkCss", value);
			}
		}


		/// <summary>
		/// Link on-click (Javascript).
		/// </summary>
		[DatabaseField]
		public string LinkOnClick
		{
			get
			{
				return ValidationHelper.GetString(GetValue("LinkOnClick"), @"");
			}
			set
			{
				SetValue("LinkOnClick", value);
			}
		}


		/// <summary>
		/// Enable.
		/// </summary>
		[DatabaseField]
		public bool GAEnable
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("GAEnable"), false);
			}
			set
			{
				SetValue("GAEnable", value);
			}
		}


		/// <summary>
		/// Event code.
		/// </summary>
		[DatabaseField]
		public string GAEventCode
		{
			get
			{
				return ValidationHelper.GetString(GetValue("GAEventCode"), @"");
			}
			set
			{
				SetValue("GAEventCode", value);
			}
		}


		/// <summary>
		/// Category.
		/// </summary>
		[DatabaseField]
		public string GACategory
		{
			get
			{
				return ValidationHelper.GetString(GetValue("GACategory"), @"");
			}
			set
			{
				SetValue("GACategory", value);
			}
		}


		/// <summary>
		/// Action.
		/// </summary>
		[DatabaseField]
		public string GAAction
		{
			get
			{
				return ValidationHelper.GetString(GetValue("GAAction"), @"");
			}
			set
			{
				SetValue("GAAction", value);
			}
		}


		/// <summary>
		/// Label.
		/// </summary>
		[DatabaseField]
		public string GALabel
		{
			get
			{
				return ValidationHelper.GetString(GetValue("GALabel"), @"");
			}
			set
			{
				SetValue("GALabel", value);
			}
		}


		/// <summary>
		/// Element ID.
		/// </summary>
		[DatabaseField]
		public string ElementID
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ElementID"), @"");
			}
			set
			{
				SetValue("ElementID", value);
			}
		}


		/// <summary>
		/// Invisible.
		/// </summary>
		[DatabaseField]
		public bool Invisible
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("Invisible"), false);
			}
			set
			{
				SetValue("Invisible", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with BaseComponentWithLink fields.
		/// </summary>
		[RegisterProperty]
		public BaseComponentWithLinkFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with BaseComponentWithLink fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class BaseComponentWithLinkFields : AbstractHierarchicalObject<BaseComponentWithLinkFields>
		{
			/// <summary>
			/// The content item of type BaseComponentWithLink that is a target of the extended API.
			/// </summary>
			private readonly BaseComponentWithLink mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="BaseComponentWithLinkFields" /> class with the specified content item of type BaseComponentWithLink.
			/// </summary>
			/// <param name="instance">The content item of type BaseComponentWithLink that is a target of the extended API.</param>
			public BaseComponentWithLinkFields(BaseComponentWithLink instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// KrungsriBaseComponentID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.BaseComponentWithLinkID;
				}
				set
				{
					mInstance.BaseComponentWithLinkID = value;
				}
			}


			/// <summary>
			/// Link type.
			/// </summary>
			public int LinkType
			{
				get
				{
					return mInstance.LinkType;
				}
				set
				{
					mInstance.LinkType = value;
				}
			}


			/// <summary>
			/// Link page.
			/// </summary>
			public Guid LinkPageNodeGuid
			{
				get
				{
					return mInstance.LinkPageNodeGuid;
				}
				set
				{
					mInstance.LinkPageNodeGuid = value;
				}
			}


			/// <summary>
			/// Link URL.
			/// </summary>
			public string LinkUrl
			{
				get
				{
					return mInstance.LinkUrl;
				}
				set
				{
					mInstance.LinkUrl = value;
				}
			}


			/// <summary>
			/// Link target.
			/// </summary>
			public string LinkTarget
			{
				get
				{
					return mInstance.LinkTarget;
				}
				set
				{
					mInstance.LinkTarget = value;
				}
			}


			/// <summary>
			/// Link alt.
			/// </summary>
			public string LinkAlt
			{
				get
				{
					return mInstance.LinkAlt;
				}
				set
				{
					mInstance.LinkAlt = value;
				}
			}


			/// <summary>
			/// Link CSS.
			/// </summary>
			public string LinkCss
			{
				get
				{
					return mInstance.LinkCss;
				}
				set
				{
					mInstance.LinkCss = value;
				}
			}


			/// <summary>
			/// Link on-click (Javascript).
			/// </summary>
			public string LinkOnClick
			{
				get
				{
					return mInstance.LinkOnClick;
				}
				set
				{
					mInstance.LinkOnClick = value;
				}
			}


			/// <summary>
			/// Enable.
			/// </summary>
			public bool GAEnable
			{
				get
				{
					return mInstance.GAEnable;
				}
				set
				{
					mInstance.GAEnable = value;
				}
			}


			/// <summary>
			/// Event code.
			/// </summary>
			public string GAEventCode
			{
				get
				{
					return mInstance.GAEventCode;
				}
				set
				{
					mInstance.GAEventCode = value;
				}
			}


			/// <summary>
			/// Category.
			/// </summary>
			public string GACategory
			{
				get
				{
					return mInstance.GACategory;
				}
				set
				{
					mInstance.GACategory = value;
				}
			}


			/// <summary>
			/// Action.
			/// </summary>
			public string GAAction
			{
				get
				{
					return mInstance.GAAction;
				}
				set
				{
					mInstance.GAAction = value;
				}
			}


			/// <summary>
			/// Label.
			/// </summary>
			public string GALabel
			{
				get
				{
					return mInstance.GALabel;
				}
				set
				{
					mInstance.GALabel = value;
				}
			}


			/// <summary>
			/// Element ID.
			/// </summary>
			public string ElementID
			{
				get
				{
					return mInstance.ElementID;
				}
				set
				{
					mInstance.ElementID = value;
				}
			}


			/// <summary>
			/// Invisible.
			/// </summary>
			public bool Invisible
			{
				get
				{
					return mInstance.Invisible;
				}
				set
				{
					mInstance.Invisible = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="BaseComponentWithLink" /> class.
		/// </summary>
		public BaseComponentWithLink() : base(CLASS_NAME)
		{
			mFields = new BaseComponentWithLinkFields(this);
		}

		#endregion
	}
}