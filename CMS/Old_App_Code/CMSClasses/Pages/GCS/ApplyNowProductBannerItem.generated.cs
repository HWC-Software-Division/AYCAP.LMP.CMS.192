//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.GCS;

[assembly: RegisterDocumentType(ApplyNowProductBannerItem.CLASS_NAME, typeof(ApplyNowProductBannerItem))]

namespace CMS.DocumentEngine.Types.GCS
{
	/// <summary>
	/// Represents a content item of type ApplyNowProductBannerItem.
	/// </summary>
	public partial class ApplyNowProductBannerItem : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "GCS.ApplyNowProductBannerItem";


		/// <summary>
		/// The instance of the class that provides extended API for working with ApplyNowProductBannerItem fields.
		/// </summary>
		private readonly ApplyNowProductBannerItemFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// CarouselBannerItemID.
		/// </summary>
		[DatabaseIDField]
		public int ApplyNowProductBannerItemID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("ApplyNowProductBannerItemID"), 0);
			}
			set
			{
				SetValue("ApplyNowProductBannerItemID", value);
			}
		}


		/// <summary>
		/// Element ID.
		/// </summary>
		[DatabaseField]
		public string ElementID
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ElementID"), @"");
			}
			set
			{
				SetValue("ElementID", value);
			}
		}


		/// <summary>
		/// Invisible.
		/// </summary>
		[DatabaseField]
		public bool Invisible
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("Invisible"), false);
			}
			set
			{
				SetValue("Invisible", value);
			}
		}


		/// <summary>
		/// Apply Now Product Type.
		/// </summary>
		[DatabaseField]
		public string ApplyNowProductType
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ApplyNowProductType"), @"");
			}
			set
			{
				SetValue("ApplyNowProductType", value);
			}
		}


		/// <summary>
		/// Title content.
		/// </summary>
		[DatabaseField]
		public string TitleContent
		{
			get
			{
				return ValidationHelper.GetString(GetValue("TitleContent"), @"");
			}
			set
			{
				SetValue("TitleContent", value);
			}
		}


		/// <summary>
		/// Description content.
		/// </summary>
		[DatabaseField]
		public string DescContent
		{
			get
			{
				return ValidationHelper.GetString(GetValue("DescContent"), @"");
			}
			set
			{
				SetValue("DescContent", value);
			}
		}


		/// <summary>
		/// Image item.
		/// </summary>
		[DatabaseField]
		public string ImageItem
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ImageItem"), @"");
			}
			set
			{
				SetValue("ImageItem", value);
			}
		}


		/// <summary>
		/// Image item alt.
		/// </summary>
		[DatabaseField]
		public string ImageItemAlt
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ImageItemAlt"), @"");
			}
			set
			{
				SetValue("ImageItemAlt", value);
			}
		}


		/// <summary>
		/// Link text.
		/// </summary>
		[DatabaseField]
		public string LinkText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("LinkText"), @"");
			}
			set
			{
				SetValue("LinkText", value);
			}
		}


		/// <summary>
		/// Link type.
		/// </summary>
		[DatabaseField]
		public int LinkType
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("LinkType"), 0);
			}
			set
			{
				SetValue("LinkType", value);
			}
		}


		/// <summary>
		/// Link page url.
		/// </summary>
		[DatabaseField]
		public string LinkPageUrl
		{
			get
			{
				return ValidationHelper.GetString(GetValue("LinkPageUrl"), @"");
			}
			set
			{
				SetValue("LinkPageUrl", value);
			}
		}


		/// <summary>
		/// Link URL.
		/// </summary>
		[DatabaseField]
		public string LinkUrl
		{
			get
			{
				return ValidationHelper.GetString(GetValue("LinkUrl"), @"");
			}
			set
			{
				SetValue("LinkUrl", value);
			}
		}


		/// <summary>
		/// Link target.
		/// </summary>
		[DatabaseField]
		public string LinkTarget
		{
			get
			{
				return ValidationHelper.GetString(GetValue("LinkTarget"), @"");
			}
			set
			{
				SetValue("LinkTarget", value);
			}
		}


		/// <summary>
		/// Descriptive text for on hover and for screen readers.
		/// </summary>
		[DatabaseField]
		public string LinkAlt
		{
			get
			{
				return ValidationHelper.GetString(GetValue("LinkAlt"), @"");
			}
			set
			{
				SetValue("LinkAlt", value);
			}
		}


		/// <summary>
		/// Optional On click for the link.
		/// </summary>
		[DatabaseField]
		public string LinkOnClick
		{
			get
			{
				return ValidationHelper.GetString(GetValue("LinkOnClick"), @"");
			}
			set
			{
				SetValue("LinkOnClick", value);
			}
		}


		/// <summary>
		/// Optional CSS Class applied to the navigation item.
		/// </summary>
		[DatabaseField]
		public string LinkCSS
		{
			get
			{
				return ValidationHelper.GetString(GetValue("LinkCSS"), @"");
			}
			set
			{
				SetValue("LinkCSS", value);
			}
		}


		/// <summary>
		/// Modal title.
		/// </summary>
		[DatabaseField]
		public string ModalTitle
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ModalTitle"), @"");
			}
			set
			{
				SetValue("ModalTitle", value);
			}
		}


		/// <summary>
		/// Modal sub title.
		/// </summary>
		[DatabaseField]
		public string ModalSubTitle
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ModalSubTitle"), @"");
			}
			set
			{
				SetValue("ModalSubTitle", value);
			}
		}


		/// <summary>
		/// Modal content.
		/// </summary>
		[DatabaseField]
		public string ModalContent
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ModalContent"), @"");
			}
			set
			{
				SetValue("ModalContent", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with ApplyNowProductBannerItem fields.
		/// </summary>
		[RegisterProperty]
		public ApplyNowProductBannerItemFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with ApplyNowProductBannerItem fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class ApplyNowProductBannerItemFields : AbstractHierarchicalObject<ApplyNowProductBannerItemFields>
		{
			/// <summary>
			/// The content item of type ApplyNowProductBannerItem that is a target of the extended API.
			/// </summary>
			private readonly ApplyNowProductBannerItem mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="ApplyNowProductBannerItemFields" /> class with the specified content item of type ApplyNowProductBannerItem.
			/// </summary>
			/// <param name="instance">The content item of type ApplyNowProductBannerItem that is a target of the extended API.</param>
			public ApplyNowProductBannerItemFields(ApplyNowProductBannerItem instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// CarouselBannerItemID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.ApplyNowProductBannerItemID;
				}
				set
				{
					mInstance.ApplyNowProductBannerItemID = value;
				}
			}


			/// <summary>
			/// Element ID.
			/// </summary>
			public string ElementID
			{
				get
				{
					return mInstance.ElementID;
				}
				set
				{
					mInstance.ElementID = value;
				}
			}


			/// <summary>
			/// Invisible.
			/// </summary>
			public bool Invisible
			{
				get
				{
					return mInstance.Invisible;
				}
				set
				{
					mInstance.Invisible = value;
				}
			}


			/// <summary>
			/// Apply Now Product Type.
			/// </summary>
			public string ApplyNowProductType
			{
				get
				{
					return mInstance.ApplyNowProductType;
				}
				set
				{
					mInstance.ApplyNowProductType = value;
				}
			}


			/// <summary>
			/// Title content.
			/// </summary>
			public string TitleContent
			{
				get
				{
					return mInstance.TitleContent;
				}
				set
				{
					mInstance.TitleContent = value;
				}
			}


			/// <summary>
			/// Description content.
			/// </summary>
			public string DescContent
			{
				get
				{
					return mInstance.DescContent;
				}
				set
				{
					mInstance.DescContent = value;
				}
			}


			/// <summary>
			/// Image item.
			/// </summary>
			public string ImageItem
			{
				get
				{
					return mInstance.ImageItem;
				}
				set
				{
					mInstance.ImageItem = value;
				}
			}


			/// <summary>
			/// Image item alt.
			/// </summary>
			public string ImageItemAlt
			{
				get
				{
					return mInstance.ImageItemAlt;
				}
				set
				{
					mInstance.ImageItemAlt = value;
				}
			}


			/// <summary>
			/// Link text.
			/// </summary>
			public string LinkText
			{
				get
				{
					return mInstance.LinkText;
				}
				set
				{
					mInstance.LinkText = value;
				}
			}


			/// <summary>
			/// Link type.
			/// </summary>
			public int LinkType
			{
				get
				{
					return mInstance.LinkType;
				}
				set
				{
					mInstance.LinkType = value;
				}
			}


			/// <summary>
			/// Link page url.
			/// </summary>
			public string LinkPageUrl
			{
				get
				{
					return mInstance.LinkPageUrl;
				}
				set
				{
					mInstance.LinkPageUrl = value;
				}
			}


			/// <summary>
			/// Link URL.
			/// </summary>
			public string LinkUrl
			{
				get
				{
					return mInstance.LinkUrl;
				}
				set
				{
					mInstance.LinkUrl = value;
				}
			}


			/// <summary>
			/// Link target.
			/// </summary>
			public string LinkTarget
			{
				get
				{
					return mInstance.LinkTarget;
				}
				set
				{
					mInstance.LinkTarget = value;
				}
			}


			/// <summary>
			/// Descriptive text for on hover and for screen readers.
			/// </summary>
			public string LinkAlt
			{
				get
				{
					return mInstance.LinkAlt;
				}
				set
				{
					mInstance.LinkAlt = value;
				}
			}


			/// <summary>
			/// Optional On click for the link.
			/// </summary>
			public string LinkOnClick
			{
				get
				{
					return mInstance.LinkOnClick;
				}
				set
				{
					mInstance.LinkOnClick = value;
				}
			}


			/// <summary>
			/// Optional CSS Class applied to the navigation item.
			/// </summary>
			public string LinkCSS
			{
				get
				{
					return mInstance.LinkCSS;
				}
				set
				{
					mInstance.LinkCSS = value;
				}
			}


			/// <summary>
			/// Modal title.
			/// </summary>
			public string ModalTitle
			{
				get
				{
					return mInstance.ModalTitle;
				}
				set
				{
					mInstance.ModalTitle = value;
				}
			}


			/// <summary>
			/// Modal sub title.
			/// </summary>
			public string ModalSubTitle
			{
				get
				{
					return mInstance.ModalSubTitle;
				}
				set
				{
					mInstance.ModalSubTitle = value;
				}
			}


			/// <summary>
			/// Modal content.
			/// </summary>
			public string ModalContent
			{
				get
				{
					return mInstance.ModalContent;
				}
				set
				{
					mInstance.ModalContent = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="ApplyNowProductBannerItem" /> class.
		/// </summary>
		public ApplyNowProductBannerItem() : base(CLASS_NAME)
		{
			mFields = new ApplyNowProductBannerItemFields(this);
		}

		#endregion
	}
}