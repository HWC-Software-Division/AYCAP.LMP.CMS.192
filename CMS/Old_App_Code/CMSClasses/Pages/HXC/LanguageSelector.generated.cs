//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.HXC;

[assembly: RegisterDocumentType(LanguageSelector.CLASS_NAME, typeof(LanguageSelector))]

namespace CMS.DocumentEngine.Types.HXC
{
	/// <summary>
	/// Represents a content item of type LanguageSelector.
	/// </summary>
	public partial class LanguageSelector : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "HXC.LanguageSelector";


		/// <summary>
		/// The instance of the class that provides extended API for working with LanguageSelector fields.
		/// </summary>
		private readonly LanguageSelectorFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// LanguageSelectorID.
		/// </summary>
		[DatabaseIDField]
		public int LanguageSelectorID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("LanguageSelectorID"), 0);
			}
			set
			{
				SetValue("LanguageSelectorID", value);
			}
		}


		/// <summary>
		/// Text.
		/// </summary>
		[DatabaseField]
		public string Text
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Text"), @"");
			}
			set
			{
				SetValue("Text", value);
			}
		}


		/// <summary>
		/// Culture code.
		/// </summary>
		[DatabaseField]
		public string CultureCode
		{
			get
			{
				return ValidationHelper.GetString(GetValue("CultureCode"), @"");
			}
			set
			{
				SetValue("CultureCode", value);
			}
		}


		/// <summary>
		/// Flag.
		/// </summary>
		[DatabaseField]
		public string Flag
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Flag"), @"");
			}
			set
			{
				SetValue("Flag", value);
			}
		}


		/// <summary>
		/// Flag ALT.
		/// </summary>
		[DatabaseField]
		public string FlagAlt
		{
			get
			{
				return ValidationHelper.GetString(GetValue("FlagAlt"), @"");
			}
			set
			{
				SetValue("FlagAlt", value);
			}
		}


		/// <summary>
		/// Element ID.
		/// </summary>
		[DatabaseField]
		public string ElementID
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ElementID"), @"");
			}
			set
			{
				SetValue("ElementID", value);
			}
		}


		/// <summary>
		/// Invisible.
		/// </summary>
		[DatabaseField]
		public bool Invisible
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("Invisible"), false);
			}
			set
			{
				SetValue("Invisible", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with LanguageSelector fields.
		/// </summary>
		[RegisterProperty]
		public LanguageSelectorFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with LanguageSelector fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class LanguageSelectorFields : AbstractHierarchicalObject<LanguageSelectorFields>
		{
			/// <summary>
			/// The content item of type LanguageSelector that is a target of the extended API.
			/// </summary>
			private readonly LanguageSelector mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="LanguageSelectorFields" /> class with the specified content item of type LanguageSelector.
			/// </summary>
			/// <param name="instance">The content item of type LanguageSelector that is a target of the extended API.</param>
			public LanguageSelectorFields(LanguageSelector instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// LanguageSelectorID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.LanguageSelectorID;
				}
				set
				{
					mInstance.LanguageSelectorID = value;
				}
			}


			/// <summary>
			/// Text.
			/// </summary>
			public string Text
			{
				get
				{
					return mInstance.Text;
				}
				set
				{
					mInstance.Text = value;
				}
			}


			/// <summary>
			/// Culture code.
			/// </summary>
			public string CultureCode
			{
				get
				{
					return mInstance.CultureCode;
				}
				set
				{
					mInstance.CultureCode = value;
				}
			}


			/// <summary>
			/// Flag.
			/// </summary>
			public string Flag
			{
				get
				{
					return mInstance.Flag;
				}
				set
				{
					mInstance.Flag = value;
				}
			}


			/// <summary>
			/// Flag ALT.
			/// </summary>
			public string FlagAlt
			{
				get
				{
					return mInstance.FlagAlt;
				}
				set
				{
					mInstance.FlagAlt = value;
				}
			}


			/// <summary>
			/// Element ID.
			/// </summary>
			public string ElementID
			{
				get
				{
					return mInstance.ElementID;
				}
				set
				{
					mInstance.ElementID = value;
				}
			}


			/// <summary>
			/// Invisible.
			/// </summary>
			public bool Invisible
			{
				get
				{
					return mInstance.Invisible;
				}
				set
				{
					mInstance.Invisible = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="LanguageSelector" /> class.
		/// </summary>
		public LanguageSelector() : base(CLASS_NAME)
		{
			mFields = new LanguageSelectorFields(this);
		}

		#endregion
	}
}