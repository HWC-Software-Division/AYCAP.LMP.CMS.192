//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.HXC;

[assembly: RegisterDocumentType(MasterPageFolder.CLASS_NAME, typeof(MasterPageFolder))]

namespace CMS.DocumentEngine.Types.HXC
{
	/// <summary>
	/// Represents a content item of type MasterPageFolder.
	/// </summary>
	public partial class MasterPageFolder : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "HXC.MasterPageFolder";


		/// <summary>
		/// The instance of the class that provides extended API for working with MasterPageFolder fields.
		/// </summary>
		private readonly MasterPageFolderFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// BaseContentPageID.
		/// </summary>
		[DatabaseIDField]
		public int MasterPageFolderID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("MasterPageFolderID"), 0);
			}
			set
			{
				SetValue("MasterPageFolderID", value);
			}
		}


		/// <summary>
		/// Element ID.
		/// </summary>
		[DatabaseField]
		public string ElementID
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ElementID"), @"");
			}
			set
			{
				SetValue("ElementID", value);
			}
		}


		/// <summary>
		/// Invisible.
		/// </summary>
		[DatabaseField]
		public bool Invisible
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("Invisible"), false);
			}
			set
			{
				SetValue("Invisible", value);
			}
		}


		/// <summary>
		/// Folder name.
		/// </summary>
		[DatabaseField]
		public string FolderName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("FolderName"), @"");
			}
			set
			{
				SetValue("FolderName", value);
			}
		}


		/// <summary>
		/// Redirection Type.
		/// </summary>
		[DatabaseField]
		public string PageRedirectionType
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PageRedirectionType"), @"");
			}
			set
			{
				SetValue("PageRedirectionType", value);
			}
		}


		/// <summary>
		/// Internal page URL.
		/// </summary>
		[DatabaseField]
		public Guid PageInternalRedirectNodeGuid
		{
			get
			{
				return ValidationHelper.GetGuid(GetValue("PageInternalRedirectNodeGuid"), Guid.Empty);
			}
			set
			{
				SetValue("PageInternalRedirectNodeGuid", value);
			}
		}


		/// <summary>
		/// External page URL.
		/// </summary>
		[DatabaseField]
		public string PageExternalRedirectURL
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PageExternalRedirectURL"), @"");
			}
			set
			{
				SetValue("PageExternalRedirectURL", value);
			}
		}


		/// <summary>
		/// First child page type.
		/// </summary>
		[DatabaseField]
		public string PageFirstChildClassName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PageFirstChildClassName"), @"");
			}
			set
			{
				SetValue("PageFirstChildClassName", value);
			}
		}


		/// <summary>
		/// Use permanent (301) redirects?.
		/// </summary>
		[DatabaseField]
		public bool PageUsePermanentRedirects
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("PageUsePermanentRedirects"), false);
			}
			set
			{
				SetValue("PageUsePermanentRedirects", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with MasterPageFolder fields.
		/// </summary>
		[RegisterProperty]
		public MasterPageFolderFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with MasterPageFolder fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class MasterPageFolderFields : AbstractHierarchicalObject<MasterPageFolderFields>
		{
			/// <summary>
			/// The content item of type MasterPageFolder that is a target of the extended API.
			/// </summary>
			private readonly MasterPageFolder mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="MasterPageFolderFields" /> class with the specified content item of type MasterPageFolder.
			/// </summary>
			/// <param name="instance">The content item of type MasterPageFolder that is a target of the extended API.</param>
			public MasterPageFolderFields(MasterPageFolder instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// BaseContentPageID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.MasterPageFolderID;
				}
				set
				{
					mInstance.MasterPageFolderID = value;
				}
			}


			/// <summary>
			/// Element ID.
			/// </summary>
			public string ElementID
			{
				get
				{
					return mInstance.ElementID;
				}
				set
				{
					mInstance.ElementID = value;
				}
			}


			/// <summary>
			/// Invisible.
			/// </summary>
			public bool Invisible
			{
				get
				{
					return mInstance.Invisible;
				}
				set
				{
					mInstance.Invisible = value;
				}
			}


			/// <summary>
			/// Folder name.
			/// </summary>
			public string FolderName
			{
				get
				{
					return mInstance.FolderName;
				}
				set
				{
					mInstance.FolderName = value;
				}
			}


			/// <summary>
			/// Redirection Type.
			/// </summary>
			public string PageRedirectionType
			{
				get
				{
					return mInstance.PageRedirectionType;
				}
				set
				{
					mInstance.PageRedirectionType = value;
				}
			}


			/// <summary>
			/// Internal page URL.
			/// </summary>
			public Guid PageInternalRedirectNodeGuid
			{
				get
				{
					return mInstance.PageInternalRedirectNodeGuid;
				}
				set
				{
					mInstance.PageInternalRedirectNodeGuid = value;
				}
			}


			/// <summary>
			/// External page URL.
			/// </summary>
			public string PageExternalRedirectURL
			{
				get
				{
					return mInstance.PageExternalRedirectURL;
				}
				set
				{
					mInstance.PageExternalRedirectURL = value;
				}
			}


			/// <summary>
			/// First child page type.
			/// </summary>
			public string PageFirstChildClassName
			{
				get
				{
					return mInstance.PageFirstChildClassName;
				}
				set
				{
					mInstance.PageFirstChildClassName = value;
				}
			}


			/// <summary>
			/// Use permanent (301) redirects?.
			/// </summary>
			public bool PageUsePermanentRedirects
			{
				get
				{
					return mInstance.PageUsePermanentRedirects;
				}
				set
				{
					mInstance.PageUsePermanentRedirects = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="MasterPageFolder" /> class.
		/// </summary>
		public MasterPageFolder() : base(CLASS_NAME)
		{
			mFields = new MasterPageFolderFields(this);
		}

		#endregion
	}
}