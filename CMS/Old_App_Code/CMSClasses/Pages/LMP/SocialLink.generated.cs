//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.LMP;

[assembly: RegisterDocumentType(SocialLink.CLASS_NAME, typeof(SocialLink))]

namespace CMS.DocumentEngine.Types.LMP
{
	/// <summary>
	/// Represents a content item of type SocialLink.
	/// </summary>
	public partial class SocialLink : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "LMP.SocialLink";


		/// <summary>
		/// The instance of the class that provides extended API for working with SocialLink fields.
		/// </summary>
		private readonly SocialLinkFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// NavigationID.
		/// </summary>
		[DatabaseIDField]
		public int SocialLinkID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("SocialLinkID"), 0);
			}
			set
			{
				SetValue("SocialLinkID", value);
			}
		}


		/// <summary>
		/// Navigation name.
		/// </summary>
		[DatabaseField]
		public string SocialLinkName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("SocialLinkName"), @"");
			}
			set
			{
				SetValue("SocialLinkName", value);
			}
		}


		/// <summary>
		/// Whether or not the Navigation Item should automatically build itself off of the selected page, or if you want to manually enter in the information.
		/// </summary>
		[DatabaseField]
		public int LinkType
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("LinkType"), 0);
			}
			set
			{
				SetValue("LinkType", value);
			}
		}


		/// <summary>
		/// Can select a page, the navigation will be based on this page's Title and Url.
		/// </summary>
		[DatabaseField]
		public Guid LinkPageNodeGuid
		{
			get
			{
				return ValidationHelper.GetGuid(GetValue("LinkPageNodeGuid"), Guid.Empty);
			}
			set
			{
				SetValue("LinkPageNodeGuid", value);
			}
		}


		/// <summary>
		/// Can be HTML (icons and stuff), but be sure to make it valid HTML if you do.
		/// </summary>
		[DatabaseField]
		public string LinkText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("LinkText"), @"");
			}
			set
			{
				SetValue("LinkText", value);
			}
		}


		/// <summary>
		/// Nav Link.
		/// </summary>
		[DatabaseField]
		public string LinkUrl
		{
			get
			{
				return ValidationHelper.GetString(GetValue("LinkUrl"), @"");
			}
			set
			{
				SetValue("LinkUrl", value);
			}
		}


		/// <summary>
		/// Link target.
		/// </summary>
		[DatabaseField]
		public string LinkTarget
		{
			get
			{
				return ValidationHelper.GetString(GetValue("LinkTarget"), @"_self");
			}
			set
			{
				SetValue("LinkTarget", value);
			}
		}


		/// <summary>
		/// Show in desktop section.
		/// </summary>
		[DatabaseField]
		public bool ShowInDesktopSection
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("ShowInDesktopSection"), false);
			}
			set
			{
				SetValue("ShowInDesktopSection", value);
			}
		}


		/// <summary>
		/// Show in mobile section.
		/// </summary>
		[DatabaseField]
		public bool ShowInMobileSection
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("ShowInMobileSection"), false);
			}
			set
			{
				SetValue("ShowInMobileSection", value);
			}
		}


		/// <summary>
		/// Element ID.
		/// </summary>
		[DatabaseField]
		public string ElementID
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ElementID"), @"");
			}
			set
			{
				SetValue("ElementID", value);
			}
		}


		/// <summary>
		/// Image type.
		/// </summary>
		[DatabaseField]
		public string ImageType
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ImageType"), @"");
			}
			set
			{
				SetValue("ImageType", value);
			}
		}


		/// <summary>
		/// Image.
		/// </summary>
		[DatabaseField]
		public string ImagePath
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ImagePath"), @"");
			}
			set
			{
				SetValue("ImagePath", value);
			}
		}


		/// <summary>
		/// Image SVG code.
		/// </summary>
		[DatabaseField]
		public string ImageCode
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ImageCode"), @"");
			}
			set
			{
				SetValue("ImageCode", value);
			}
		}


		/// <summary>
		/// Image alt.
		/// </summary>
		[DatabaseField]
		public string ImageAlt
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ImageAlt"), @"");
			}
			set
			{
				SetValue("ImageAlt", value);
			}
		}


		/// <summary>
		/// Optional On click for the link.
		/// </summary>
		[DatabaseField]
		public string LinkOnClick
		{
			get
			{
				return ValidationHelper.GetString(GetValue("LinkOnClick"), @"");
			}
			set
			{
				SetValue("LinkOnClick", value);
			}
		}


		/// <summary>
		/// Optional CSS Class applied to the navigation item.
		/// </summary>
		[DatabaseField]
		public string LinkCSS
		{
			get
			{
				return ValidationHelper.GetString(GetValue("LinkCSS"), @"");
			}
			set
			{
				SetValue("LinkCSS", value);
			}
		}


		/// <summary>
		/// Invisible.
		/// </summary>
		[DatabaseField]
		public bool Invisible
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("Invisible"), false);
			}
			set
			{
				SetValue("Invisible", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with SocialLink fields.
		/// </summary>
		[RegisterProperty]
		public SocialLinkFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with SocialLink fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class SocialLinkFields : AbstractHierarchicalObject<SocialLinkFields>
		{
			/// <summary>
			/// The content item of type SocialLink that is a target of the extended API.
			/// </summary>
			private readonly SocialLink mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="SocialLinkFields" /> class with the specified content item of type SocialLink.
			/// </summary>
			/// <param name="instance">The content item of type SocialLink that is a target of the extended API.</param>
			public SocialLinkFields(SocialLink instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// NavigationID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.SocialLinkID;
				}
				set
				{
					mInstance.SocialLinkID = value;
				}
			}


			/// <summary>
			/// Navigation name.
			/// </summary>
			public string Name
			{
				get
				{
					return mInstance.SocialLinkName;
				}
				set
				{
					mInstance.SocialLinkName = value;
				}
			}


			/// <summary>
			/// Whether or not the Navigation Item should automatically build itself off of the selected page, or if you want to manually enter in the information.
			/// </summary>
			public int LinkType
			{
				get
				{
					return mInstance.LinkType;
				}
				set
				{
					mInstance.LinkType = value;
				}
			}


			/// <summary>
			/// Can select a page, the navigation will be based on this page's Title and Url.
			/// </summary>
			public Guid LinkPageNodeGuid
			{
				get
				{
					return mInstance.LinkPageNodeGuid;
				}
				set
				{
					mInstance.LinkPageNodeGuid = value;
				}
			}


			/// <summary>
			/// Can be HTML (icons and stuff), but be sure to make it valid HTML if you do.
			/// </summary>
			public string LinkText
			{
				get
				{
					return mInstance.LinkText;
				}
				set
				{
					mInstance.LinkText = value;
				}
			}


			/// <summary>
			/// Nav Link.
			/// </summary>
			public string LinkUrl
			{
				get
				{
					return mInstance.LinkUrl;
				}
				set
				{
					mInstance.LinkUrl = value;
				}
			}


			/// <summary>
			/// Link target.
			/// </summary>
			public string LinkTarget
			{
				get
				{
					return mInstance.LinkTarget;
				}
				set
				{
					mInstance.LinkTarget = value;
				}
			}


			/// <summary>
			/// Show in desktop section.
			/// </summary>
			public bool ShowInDesktopSection
			{
				get
				{
					return mInstance.ShowInDesktopSection;
				}
				set
				{
					mInstance.ShowInDesktopSection = value;
				}
			}


			/// <summary>
			/// Show in mobile section.
			/// </summary>
			public bool ShowInMobileSection
			{
				get
				{
					return mInstance.ShowInMobileSection;
				}
				set
				{
					mInstance.ShowInMobileSection = value;
				}
			}


			/// <summary>
			/// Element ID.
			/// </summary>
			public string ElementID
			{
				get
				{
					return mInstance.ElementID;
				}
				set
				{
					mInstance.ElementID = value;
				}
			}


			/// <summary>
			/// Image type.
			/// </summary>
			public string ImageType
			{
				get
				{
					return mInstance.ImageType;
				}
				set
				{
					mInstance.ImageType = value;
				}
			}


			/// <summary>
			/// Image.
			/// </summary>
			public string ImagePath
			{
				get
				{
					return mInstance.ImagePath;
				}
				set
				{
					mInstance.ImagePath = value;
				}
			}


			/// <summary>
			/// Image SVG code.
			/// </summary>
			public string ImageCode
			{
				get
				{
					return mInstance.ImageCode;
				}
				set
				{
					mInstance.ImageCode = value;
				}
			}


			/// <summary>
			/// Image alt.
			/// </summary>
			public string ImageAlt
			{
				get
				{
					return mInstance.ImageAlt;
				}
				set
				{
					mInstance.ImageAlt = value;
				}
			}


			/// <summary>
			/// Optional On click for the link.
			/// </summary>
			public string LinkOnClick
			{
				get
				{
					return mInstance.LinkOnClick;
				}
				set
				{
					mInstance.LinkOnClick = value;
				}
			}


			/// <summary>
			/// Optional CSS Class applied to the navigation item.
			/// </summary>
			public string LinkCSS
			{
				get
				{
					return mInstance.LinkCSS;
				}
				set
				{
					mInstance.LinkCSS = value;
				}
			}


			/// <summary>
			/// Invisible.
			/// </summary>
			public bool Invisible
			{
				get
				{
					return mInstance.Invisible;
				}
				set
				{
					mInstance.Invisible = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="SocialLink" /> class.
		/// </summary>
		public SocialLink() : base(CLASS_NAME)
		{
			mFields = new SocialLinkFields(this);
		}

		#endregion
	}
}