//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.LMP;

[assembly: RegisterDocumentType(StickyFooter.CLASS_NAME, typeof(StickyFooter))]

namespace CMS.DocumentEngine.Types.LMP
{
	/// <summary>
	/// Represents a content item of type StickyFooter.
	/// </summary>
	public partial class StickyFooter : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "LMP.StickyFooter";


		/// <summary>
		/// The instance of the class that provides extended API for working with StickyFooter fields.
		/// </summary>
		private readonly StickyFooterFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// NavigationFolderID.
		/// </summary>
		[DatabaseIDField]
		public int StickyFooterID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("StickyFooterID"), 0);
			}
			set
			{
				SetValue("StickyFooterID", value);
			}
		}


		/// <summary>
		/// Sticky footer name.
		/// </summary>
		[DatabaseField]
		public string StickyFooterName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("StickyFooterName"), @"Sticky footer item 1");
			}
			set
			{
				SetValue("StickyFooterName", value);
			}
		}


		/// <summary>
		/// Sticky footer ID.
		/// </summary>
		[DatabaseField]
		public string IDRefer
		{
			get
			{
				return ValidationHelper.GetString(GetValue("IDRefer"), @"section-rl-popup01");
			}
			set
			{
				SetValue("IDRefer", value);
			}
		}


		/// <summary>
		/// Font size.
		/// </summary>
		[DatabaseField]
		public string FontSize
		{
			get
			{
				return ValidationHelper.GetString(GetValue("FontSize"), @"16px");
			}
			set
			{
				SetValue("FontSize", value);
			}
		}


		/// <summary>
		/// Font color.
		/// </summary>
		[DatabaseField]
		public string FontColor
		{
			get
			{
				return ValidationHelper.GetString(GetValue("FontColor"), @"#222222");
			}
			set
			{
				SetValue("FontColor", value);
			}
		}


		/// <summary>
		/// Background color.
		/// </summary>
		[DatabaseField]
		public string BackgroundColor
		{
			get
			{
				return ValidationHelper.GetString(GetValue("BackgroundColor"), @"#4d4d4d");
			}
			set
			{
				SetValue("BackgroundColor", value);
			}
		}


		/// <summary>
		/// ใส่ ข้อความ Sticky footer (RL) ของกแต่ละประเภทของผลิตภัณฑ์.
		/// </summary>
		[DatabaseField]
		public string Detail
		{
			get
			{
				return ValidationHelper.GetString(GetValue("Detail"), @"");
			}
			set
			{
				SetValue("Detail", value);
			}
		}


		/// <summary>
		/// Element ID.
		/// </summary>
		[DatabaseField]
		public string ElementID
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ElementID"), @"");
			}
			set
			{
				SetValue("ElementID", value);
			}
		}


		/// <summary>
		/// Invisible.
		/// </summary>
		[DatabaseField]
		public bool Invisible
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("Invisible"), false);
			}
			set
			{
				SetValue("Invisible", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with StickyFooter fields.
		/// </summary>
		[RegisterProperty]
		public StickyFooterFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with StickyFooter fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class StickyFooterFields : AbstractHierarchicalObject<StickyFooterFields>
		{
			/// <summary>
			/// The content item of type StickyFooter that is a target of the extended API.
			/// </summary>
			private readonly StickyFooter mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="StickyFooterFields" /> class with the specified content item of type StickyFooter.
			/// </summary>
			/// <param name="instance">The content item of type StickyFooter that is a target of the extended API.</param>
			public StickyFooterFields(StickyFooter instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// NavigationFolderID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.StickyFooterID;
				}
				set
				{
					mInstance.StickyFooterID = value;
				}
			}


			/// <summary>
			/// Sticky footer name.
			/// </summary>
			public string Name
			{
				get
				{
					return mInstance.StickyFooterName;
				}
				set
				{
					mInstance.StickyFooterName = value;
				}
			}


			/// <summary>
			/// Sticky footer ID.
			/// </summary>
			public string IDRefer
			{
				get
				{
					return mInstance.IDRefer;
				}
				set
				{
					mInstance.IDRefer = value;
				}
			}


			/// <summary>
			/// Font size.
			/// </summary>
			public string FontSize
			{
				get
				{
					return mInstance.FontSize;
				}
				set
				{
					mInstance.FontSize = value;
				}
			}


			/// <summary>
			/// Font color.
			/// </summary>
			public string FontColor
			{
				get
				{
					return mInstance.FontColor;
				}
				set
				{
					mInstance.FontColor = value;
				}
			}


			/// <summary>
			/// Background color.
			/// </summary>
			public string BackgroundColor
			{
				get
				{
					return mInstance.BackgroundColor;
				}
				set
				{
					mInstance.BackgroundColor = value;
				}
			}


			/// <summary>
			/// ใส่ ข้อความ Sticky footer (RL) ของกแต่ละประเภทของผลิตภัณฑ์.
			/// </summary>
			public string Detail
			{
				get
				{
					return mInstance.Detail;
				}
				set
				{
					mInstance.Detail = value;
				}
			}


			/// <summary>
			/// Element ID.
			/// </summary>
			public string ElementID
			{
				get
				{
					return mInstance.ElementID;
				}
				set
				{
					mInstance.ElementID = value;
				}
			}


			/// <summary>
			/// Invisible.
			/// </summary>
			public bool Invisible
			{
				get
				{
					return mInstance.Invisible;
				}
				set
				{
					mInstance.Invisible = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="StickyFooter" /> class.
		/// </summary>
		public StickyFooter() : base(CLASS_NAME)
		{
			mFields = new StickyFooterFields(this);
		}

		#endregion
	}
}